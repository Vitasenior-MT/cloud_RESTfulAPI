require("source-map-support").install(),function(e){var t={};function s(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.w={},s(s.s=40)}([function(e,t,s){var a=s(4),o=s(37),n="",d="";n="mongodb://localhost:27017/myproject",d="mysql://api:123qwe@localhost:3306/node";const r={$eq:o.Op.eq,$ne:o.Op.ne,$gte:o.Op.gte,$gt:o.Op.gt,$lte:o.Op.lte,$lt:o.Op.lt,$not:o.Op.not,$in:o.Op.in,$notIn:o.Op.notIn,$is:o.Op.is,$like:o.Op.like,$notLike:o.Op.notLike,$iLike:o.Op.iLike,$notILike:o.Op.notILike,$regexp:o.Op.regexp,$notRegexp:o.Op.notRegexp,$iRegexp:o.Op.iRegexp,$notIRegexp:o.Op.notIRegexp,$between:o.Op.between,$notBetween:o.Op.notBetween,$overlap:o.Op.overlap,$contains:o.Op.contains,$contained:o.Op.contained,$adjacent:o.Op.adjacent,$strictLeft:o.Op.strictLeft,$strictRight:o.Op.strictRight,$noExtendRight:o.Op.noExtendRight,$noExtendLeft:o.Op.noExtendLeft,$and:o.Op.and,$or:o.Op.or,$any:o.Op.any,$all:o.Op.all,$values:o.Op.values,$col:o.Op.col};a.connect(n);var i=new o(d,{operatorsAliases:r,logging:!1});const c={Boardmodel:s(36)(i,o),Board:s(35)(i,o),Patient:s(34)(i,o),Sensor:s(33)(i,o),UserVitabox:s(32)(i,o),User:s(31)(i,o),Vitabox:s(30)(i,o),Record:s(29)};Object.keys(c).forEach(e=>{c[e].associate&&c[e].associate(c)}),c.sequelize=i,c.mongoose=a.connection,e.exports=c},function(e,t,s){e.exports.v1_0_0={boardmodel:s(19),board:s(18),patient:s(17),record:s(16),sensor:s(15),user:s(14),utils:s(2),vitabox:s(13)}},function(e,t,s){(function(e){var a=s(28),o=s(27),n=s(26),d=s(0);t.encrypt=function(e){return new Promise((t,s)=>{e.forEach((t,s)=>{let o=a.createCipher(process.env.ALGORITHM,process.env.KEY);return e[s]=o.update(Buffer.from(t),"utf8","hex")+o.final("hex")}),t(e)})},t.decrypt=function(e){let t=a.createDecipher(process.env.ALGORITHM,process.env.KEY);return t.update(e,"hex","utf8")+t.final("utf8")},t.createToken=function(t,s){return new Promise((a,d)=>{let r=o.readFileSync(e+"/../../keys/key.pem").toString();void 0===r&&d({code:500,msg:"error on load private key"});let i={id:t.id,role:t.constructor.name},c={expiresIn:"8h",algorithm:"RS256",subject:s};n.sign(i,r,c,function(e,t){e&&d({code:500,msg:e.message}),a(t)})})},t.validateToken=function(t,s){return new Promise((a,r)=>{let i=o.readFileSync(e+"/../../keys/cert.pem").toString();void 0===i&&r("error on load public key");let c={algorithms:["RS256"],subject:s};n.verify(t,i,c,function(e,t){e&&r({code:500,msg:e.message}),d[t.role].findById(t.id).then(e=>a(e),e=>r({code:500,msg:e.message}))})})},t.generatePassword=(()=>{let e,t="";for(e=0;e<10;e++)t+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"[Math.floor(61*Math.random())];return t}),t.deleteAll=function(){return new Promise((e,t)=>{var s={raw:!0};d.sequelize.query("SET FOREIGN_KEY_CHECKS = 0",s).then(()=>{d.UserVitabox.truncate().then(()=>{d.User.truncate().then(()=>{d.Vitabox.truncate().then(()=>{d.Boardmodel.truncate().then(()=>{d.Board.truncate().then(()=>{d.Patient.truncate().then(()=>{d.Record.remove({},()=>{d.sequelize.query("SET FOREIGN_KEY_CHECKS = 1",s).then(()=>e(),e=>t(e))})},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))})},t.testSeed=function(){return new Promise((e,t)=>{s(3).testSeed(d).then(()=>e(),e=>t(e))})}}).call(this,"app/business/v1.0.0")},function(e,t,s){var a=s(2);e.exports.seed=(e=>new Promise((t,s)=>{e.User.count({where:{admin:!0}}).then(o=>{o<1?a.encrypt(["admin@a.aa","user1@a.aa","user2@a.aa","123qweASD","passvita","José António","Manuela Antonieta"]).then(a=>{e.User.bulkCreate([{email:a[0],admin:!0,password:a[3]},{email:a[1],password:a[3]},{email:a[2],password:a[3]}]).then(o=>e.Vitabox.create({latitude:"39.6003075",longitude:"-8.3906627",address:"Av. Dr. Aurélio Ribeiro 3, Tomar, Portugal",registered:!0,active:!0,password:a[4]}).then(n=>n.addUsers([o[1].id,o[2].id]).then(()=>e.Boardmodel.bulkCreate([{name:"Zolertia RE-Mote",type:"environmental"},{name:"Xiaomi MI Band",type:"wearable"},{name:"MySignals",type:"non-wearable"}]).then(o=>e.Board.bulkCreate([{vitabox_id:n.id,boardmodel_id:o[0].id,location:"kitchen",mac_addr:"00:12:4b:00:06:0d:60:c8",password:a[4],active:!0},{vitabox_id:n.id,boardmodel_id:o[1].id,mac_addr:"00:12:4b:00:06:0d:b2:1a",password:a[4],active:!0},{vitabox_id:n.id,boardmodel_id:o[2].id,location:"bedroom",mac_addr:"00:12:4b:00:06:0d:60:fb",password:a[4],active:!0}]).then(d=>e.Sensor.bulkCreate([{transducer:"dht22",measure:"temperature",min_acceptable:"10",max_acceptable:"25",min_possible:"-20",max_possible:"50"},{transducer:"dht22",measure:"humidity",min_acceptable:"30",max_acceptable:"50",min_possible:"20",max_possible:"60"},{transducer:"mq-7",measure:"carbon_monoxide",min_acceptable:"2",max_acceptable:"10",min_possible:"10",max_possible:"500"}]).then(r=>o[0].addSensors([r[0].id,r[1].id]).then(()=>e.Record.insertMany([{value:"20",datetime:"2018-03-08T09:43:40.000Z",board_id:d[0].id,sensor_id:r[0].id},{value:"22",datetime:"2018-03-08T09:47:28.000Z",board_id:d[0].id,sensor_id:r[0].id},{value:"19",datetime:"2018-03-08T09:53:47.000Z",board_id:d[0].id,sensor_id:r[0].id}],(o,d)=>{o?s(o):e.Patient.bulkCreate([{name:a[5],birthdate:"1987-02-28",gender:"male"},{name:a[6],birthdate:"1972-02-28",gender:"female"}]).then(e=>n.addPatients(e).then(()=>t(),e=>s(e)),e=>s(e))}),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e))},e=>s(e)):t()},e=>s(e))})),e.exports.testSeed=(e=>new Promise((t,s)=>{a.encrypt(["admin@a.aa","123qweASD"]).then(a=>{e.User.create({email:a[0],admin:!0,password:a[1]}).then(()=>t(),e=>s(e))},e=>s(e))}))},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("express-routes-versioning")},function(e,t,s){var a=s(1).v1_0_0;t.create=function(e,t){"User"===e.client.constructor.name&&e.client.admin?a.vitabox.create().then(e=>t.status(200).json(e),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.register=function(e,t){"User"===e.client.constructor.name&&e.client.admin?a.user.findByEmail(e.body.email).then(s=>{a.vitabox.register(e.params.id,e.body).then(o=>{a.vitabox.addUser(e.client,o.id,s.id,!0).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message))},e=>t.status(e.code).send(e.message))},e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.connect=function(e,t){a.vitabox.connect(e.params.id,e.body.password).then(s=>{a.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e}),e=>t.status(500).send({error:e.message}))},e=>t.status(401).send(e.message))},t.list=function(e,t){"User"===e.client.constructor.name?a.vitabox.list(e.client).then(e=>t.status(200).json({vitaboxes:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.find=function(e,t){"User"===e.client.constructor.name?a.vitabox.find(e.client,e.params.id).then(e=>t.status(200).json({vitabox:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.getSettings=function(e,t){"Vitabox"===e.client.constructor.name?t.status(200).json({settings:e.client.settings}):t.status(401).send("Unauthorized")},t.setSettings=function(e,t){"Vitabox"===e.client.constructor.name?e.client.update({settings:e.body.settings}).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.update=function(e,t){"User"===e.client.constructor.name?a.vitabox.update(e.client,e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.delete=function(e,t){"User"===e.client.constructor.name?a.vitabox.delete(e.client,e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.addUser=function(e,t){if("User"===e.client.constructor.name){let s=!!e.body.sponsor;a.user.findByEmail(e.body.email).then(o=>a.vitabox.addUser(e.client,e.params.id,o.id,s).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)),e=>t.status(e.code).send(e.message))}else t.status(401).send("Unauthorized")},t.getUsers=function(e,t){a.vitabox.getUsers("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({users:e}),e=>t.status(e.code).send(e.message))},t.removeUser=function(e,t){"User"===e.client.constructor.name?a.vitabox.removeUser(e.client,e.params.id,e.body.user_id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.addPatient=function(e,t){"User"===e.client.constructor.name?a.patient.create(e.body).then(s=>a.vitabox.addPatient(e.client,e.params.id,s.id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.getPatients=function(e,t){a.vitabox.getPatients("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({patients:e}),e=>t.status(e.code).send(e.message))},t.removePatient=function(e,t){"User"===e.client.constructor.name?a.vitabox.removePatient(e.client,e.params.id,e.body.patient_id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.addBoard=function(e,t){"User"===e.client.constructor.name?a.board.authenticate(e.body.mac_addr,e.body.password).then(s=>a.vitabox.addBoard(e.client,e.params.id,s.id).then(()=>a.board.setLocation(s,e.body.location?e.body.location:null).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)),e=>t.status(e.code).send(e.message)),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.getBoards=function(e,t){a.vitabox.getBoards("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({boards:e}),e=>t.status(e.code).send(e.message))},t.removeBoard=function(e,t){"User"===e.client.constructor.name?a.vitabox.removeBoard(e.client,e.params.id,e.body.board_id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}},function(e,t,s){var a=s(1).v1_0_0;t.register=function(e,t){a.user.register(e.body.email,e.body.password).then(s=>{a.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e,user:s.id}),e=>t.status(e.code).send(e.message))},e=>t.status(500).send(e.message))},t.login=function(e,t){a.user.login(e.body.email,e.body.password).then(s=>{a.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e,user:s.id}),e=>t.status(e.code).send(e.message))},e=>t.status(e.code).send(e.message))},t.changePassword=function(e,t){"User"===e.client.constructor.name?a.user.changePassword(e.client.id,e.body.old_password,e.body.new_password).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}},function(e,t,s){var a=s(1).v1_0_0;t.create=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.sensor.create(e.body).then(e=>t.status(200).json({id:e.id}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.list=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.sensor.list().then(e=>t.status(200).json({sensors:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.update=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.sensor.update(e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.delete=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.sensor.remove(e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(401).send("Unauthorized")})},function(e,t,s){var a=s(1).v1_0_0;t.create=function(e,t){"Vitabox"===e.client.constructor.name?a.record.create(e.body.records).then(e=>{e?t.status(200).json({result:!0,error:"some records were discarded by invalid parameters, value, datetime, sensor_id and board_id are required"}):t.status(200).json({result:!0,error:""})},e=>t.status(500).json({result:!1,error:e.message})):t.status(401).json({error:"Unauthorized"})},t.listByPatient=function(e,t){"User"===e.client.constructor.name?a.record.listByPatient(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.listByBoard=function(e,t){"User"===e.client.constructor.name?a.record.listByBoard(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")},t.listBySensor=function(e,t){"User"===e.client.constructor.name&&e.client.admin?a.record.listBySensor(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}},function(e,t,s){var a=s(1).v1_0_0;t.destroyAll=function(e,t){a.utils.deleteAll().then(()=>t.status(200).json({success:!0}),e=>t.status(500).send(e.message))},t.testDb=function(e,t){a.utils.deleteAll().then(()=>a.utils.testSeed().then(t.status(200).json({success:!0}),e=>t.status(500).send(e.message)),e=>t.status(500).send(e.message))}},function(e,t,s){var a=s(1).v1_0_0;t.create=function(e,t){"User"===e.client.constructor.name&&e.client.admin?a.board.create(e.body).then(e=>t.status(200).json(e),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}},function(e,t,s){var a=s(0),o=s(2);t.create=function(){return new Promise((e,t)=>{let s=o.generatePassword();o.encrypt([s]).then(o=>a.Vitabox.create({password:o[0]}).then(t=>e({id:t.id,password:s}),e=>t({code:500,msg:e.message})),e=>t({code:500,msg:e.message}))})},t.register=function(e,t){return new Promise((s,o)=>{t.address?a.Vitabox.findOne({where:{id:e,registered:!1}}).then(e=>{e?e.update({registered:!0,address:t.address,longitude:t.longitude,latitude:t.latitude}).then(()=>s(e),e=>o({code:500,msg:e.message})):o({code:500,msg:"Vitabox already registered or doesn´t exist"})},e=>o({code:500,msg:e.message})):o({code:500,msg:"Vitabox address must be defined"})})},t.connect=function(e,t){return new Promise((s,n)=>{o.encrypt([t]).then(t=>a.Vitabox.findOne({where:{password:t[0],id:e,registered:!0}}).then(e=>{e?e.update({active:!0}).then(()=>s(e),e=>n({code:500,msg:e.message})):n({code:500,msg:"vitabox not found, verify if was already created and registered"})},e=>n({code:500,msg:e.message})),e=>n({code:500,msg:e.message}))})},t.list=function(e){return new Promise((t,s)=>{e.admin?a.Vitabox.findAll({attributes:{exclude:["password"]}}).then(e=>t(e),e=>s({code:500,msg:e.message})):e.getVitaboxes({attributes:["id","latitude","longitude","address"],where:{active:!0}}).then(e=>{e.forEach(e=>{e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),t(e)},e=>s({code:500,msg:e.message}))})},t.find=function(e,t){return new Promise((s,o)=>{e.admin?a.Vitabox.findById(t,{attributes:{exclude:["password"]}}).then(e=>{e?s(e):o({code:500,msg:"Vitabox not found"})},e=>o({code:500,msg:e.message})):e.getVitaboxes({attributes:["id","latitude","longitude","address"],where:{id:t,active:!0}}).then(e=>{e.length>0?(e[0].dataValues.sponsor=e[0].dataValues.UserVitabox.dataValues.sponsor,delete e[0].dataValues.UserVitabox,s(e[0])):o({code:500,msg:"Vitabox not found"})},e=>o({code:500,msg:e.message}))})},t.update=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.update({latitude:s.latitude,longitude:s.longitude,address:s.address,settings:s.settings}).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>t.update({latitude:s.latitude,longitude:s.longitude,address:s.address}).then(()=>o(),e=>n({code:500,msg:e.message})),e=>n(e)):n({code:500,msg:"Vitabox not found "})},e=>n({code:500,msg:e.message}))})},t.delete=function(e,t){return new Promise((s,o)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.destroy().then(()=>s(),e=>o({code:500,msg:e.message})):_isSponsor(t,e).then(()=>t.destroy().then(()=>s(),e=>o({code:500,msg:e.message})),e=>o(e)):o({code:500,msg:"Vitabox not found"})},e=>o({code:500,msg:e.message}))})},t.addUser=function(e,t,s,o){return new Promise((n,d)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.addUser(s,{through:{sponsor:o}}).then(()=>n(),e=>d({code:500,msg:e.message})):_isSponsor(t,e).then(()=>t.addUser(s,{through:{sponsor:o}}).then(()=>n(),e=>d({code:500,msg:e.message})),e=>d(e)):d({code:500,msg:"Vitabox not found"})},e=>d({code:500,msg:e.message}))})},t.getUsers=function(e,t,s){return new Promise((n,d)=>{e?a.Vitabox.findById(s).then(e=>{e?t.admin?e.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=o.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),n(e)},e=>d({code:500,msg:e.message})):_isUser(e,t).then(()=>e.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=o.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),n(e)},e=>d({code:500,msg:e.message})),e=>d(e)):d({code:500,msg:"Vitabox not found"})},e=>d({code:500,msg:e.message})):t.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=o.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),n(e)},e=>d({code:500,msg:e.message}))})},t.removeUser=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.removeUser(s).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>{t.removeUser(s).then(()=>o(),e=>n({code:500,msg:e.message}))},e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message}))})},t.addPatient=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.addPatient(s).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>{t.addPatient(s).then(()=>o(),e=>n({code:500,msg:e.message}))},e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message}))})},t.getPatients=function(e,t,s){return new Promise((n,d)=>{e?t.admin?a.Patient.findAll({where:{vitabox_id:s},attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>e.name=o.decrypt(e.name)),n(e)},e=>d({code:500,msg:e.message})):a.Vitabox.findById(s).then(e=>{e?_isUser(e,t).then(()=>a.Patient.findAll({where:{vitabox_id:s},attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>e.name=o.decrypt(e.name)),n(e)},e=>d({code:500,msg:e.message})),e=>d(e)):d({code:500,msg:"Vitabox not found"})},e=>d({code:500,msg:e.message})):t.getPatients({attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>{e.name=o.decrypt(e.name),delete e.dataValues.VitaboxId}),n(e)},e=>d({code:500,msg:e.message}))})},t.removePatient=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.removePatient(s).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>{t.removePatient(s).then(()=>o(),e=>n({code:500,msg:e.message}))},e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message}))})},t.addBoard=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.addBoard(s).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>{console.log("is user"),t.addBoard(s).then(()=>o(),e=>n({code:500,msg:e.message}))},e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message}))})},t.getBoards=function(e,t,s){return new Promise((o,n)=>{e?t.admin?a.Board.findAll({where:{vitabox_id:s},attributes:["id","location","mac_addr","created_at"],include:[{model:a.Boardmodel,attributes:["id","type","name"],include:[{model:a.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)),o(e)},e=>n({code:500,msg:e.message})):a.Vitabox.findById(s).then(e=>{e?_isUser(e,t).then(()=>a.Board.findAll({where:{vitabox_id:s},attributes:["id","location","mac_addr","created_at"],include:[{model:a.Boardmodel,attributes:["id","type","name"],include:[{model:a.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)),o(e)},e=>n({code:500,msg:e.message})),e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message})):t.getBoards({attributes:["id","location","mac_addr","created_at"],include:[{model:a.Boardmodel,attributes:["id","type","name"],include:[{model:a.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>{e.node_id=e.mac_addr.substr(e.mac_addr.lastIndexOf(":")-2).replace(":",""),e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)}),o(e)},e=>n({code:500,msg:e.message}))})},t.removeBoard=function(e,t,s){return new Promise((o,n)=>{a.Vitabox.findById(t).then(t=>{t?e.admin?t.removeBoard(s).then(()=>o(),e=>n({code:500,msg:e.message})):_isSponsor(t,e).then(()=>{t.removeBoard(s).then(()=>o(),e=>n({code:500,msg:e.message}))},e=>n(e)):n({code:500,msg:"Vitabox not found"})},e=>n({code:500,msg:e.message}))})},_isSponsor=((e,t)=>new Promise((s,a)=>{e.getUsers({where:{id:t.id}}).then(e=>{e.length>0&&e[0].UserVitabox.sponsor?s():a({code:401,msg:"Unauthorized"})},e=>a({code:500,msg:e.message}))})),_isUser=((e,t)=>new Promise((s,a)=>{e.hasUser(t).then(e=>{e?s():a({code:401,msg:"Unauthorized"})},e=>a({code:500,msg:e.message}))}))},function(e,t,s){var a=s(0),o=s(2);t.register=function(e,t){return new Promise((s,n)=>{/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d$@$!%*#?&-.]{8,}$/.test(t)?/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/.test(e)?o.encrypt([e,t]).then(e=>a.User.create({email:e[0],password:e[1]}).then(e=>s(e),e=>n({code:500,msg:e.message})),e=>n({code:500,msg:e.message})):n({code:500,msg:"invalid email"}):n({code:500,msg:"invalid password, must have at least one uppercase letter, one lowercase, one digit and a minimum 8 characters"})})},t.login=function(e,t){return new Promise((s,n)=>{o.encrypt([e,t]).then(e=>{a.User.findOne({where:{email:e[0],password:e[1]}}).then(e=>{e?s(e):n({code:500,msg:"email and password don't match"})},e=>n({code:500,msg:e.message}))},e=>n({code:500,msg:e.message}))})},t.changePassword=function(e,t,s){return new Promise((n,d)=>{/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d$@$!%*#?&-.]{8,}$/.test(s)?o.encrypt([t,s]).then(t=>{a.User.findOne({where:{id:e,password:t[0]}}).then(e=>{e?e.update({password:t[1]}).then(()=>n(),e=>d({code:500,msg:e.message})):d({code:500,msg:"old password don't match"})},e=>d({code:500,msg:e.message}))},e=>d({code:500,msg:e.message})):d({code:500,msg:"invalid password, must have at least one uppercase letter, one lowercase, one digit and a minimum 8 characters"})})},t.findByEmail=function(e,t){return new Promise((t,s)=>{o.encrypt([e]).then(e=>a.User.findOne({where:{email:e[0]}}).then(e=>{e?t(e):s({code:500,msg:"user not registered"})},e=>s({code:500,msg:e.message})),e=>s({code:500,msg:e.message}))})}},function(e,t,s){var a=s(0);t.create=(e=>new Promise((t,s)=>{a.Sensor.create({transducer:e.transducer,measure:e.measure,min_acceptable:e.min_acceptable,max_acceptable:e.max_acceptable,min_possible:e.min_possible,max_possible:e.max_possible}).then(e=>t(e),e=>s({code:500,msg:e.message}))})),t.list=(e=>new Promise((e,t)=>{a.Sensor.findAll({attributes:{exclude:["created_at","updated_at"]}}).then(t=>e(t),e=>t({code:500,msg:e.message}))})),t.update=((e,t)=>new Promise((s,o)=>{a.Sensor.findById(e).then(e=>{e?e.update({transducer:t.transducer,measure:t.measure,min_acceptable:t.min_acceptable,max_acceptable:t.max_acceptable,min_possible:t.min_possible,max_possible:t.max_possible}).then(()=>s(),e=>o({code:500,msg:e.message})):o({code:500,msg:"sensor not found"})},e=>o({code:500,msg:e.message}))})),t.remove=(e=>new Promise((t,s)=>{a.Sensor.findById(e).then(e=>{e?e.destroy().then(()=>t(),e=>s({code:500,msg:e.message})):s({code:500,msg:"sensor not found"})},e=>s({code:500,msg:e.message}))}))},function(e,t,s){var a=s(0);t.create=function(e){return new Promise((t,s)=>{var o=[],n=!1;e.forEach(e=>{e.board_id&&""!==e.board_id&&e.sensor_id&&""!==e.sensor_id&&e.value&&e.datetime?o.push({value:e.value,datetime:e.datetime,patient_id:e.patient_id&&""!==e.patient_id?e.patient_id:null,board_id:e.board_id,sensor_id:e.sensor_id}):n=!0}),a.Record.insertMany(o,(e,a)=>{e?s({code:500,msg:e.message}):t(n)})})},t.listByPatient=function(e,t){return new Promise((s,o)=>{e.admin?a.Record.find().where("patient_id").equals(t).select("-_id").exec((e,t)=>{e?o(e):s(t)}):a.Patient.findById(t,{include:[{model:a.Vitabox}]}).then(n=>n.Vitabox.hasUser(e).then(e=>{e?a.Record.find().where("patient_id").equals(t).select("-_id").exec((e,t)=>{e?o({code:500,msg:e.message}):s(t)}):o({code:401,msg:"Unauthorized"})},e=>o({code:500,msg:e.message})),e=>o({code:500,msg:e.message}))})},t.listByBoard=function(e,t){return new Promise((s,o)=>{e.admin?a.Record.find().where("board_id").equals(t).select("-_id").exec((e,t)=>{e?o(e):s(t)}):a.Board.findById(t,{include:[{model:a.Vitabox}]}).then(n=>n.Vitabox.hasUser(e).then(e=>{e?a.Record.find().where("board_id").equals(t).select("-_id").exec((e,t)=>{e?o({code:500,msg:e.message}):s(t)}):o({code:401,msg:"Unauthorized"})},e=>o({code:500,msg:e.message})),e=>o({code:500,msg:e.message}))})},t.listBySensor=function(e,t){return new Promise((e,s)=>{a.Record.find().where("sensor_id").equals(t).select("-_id").exec((t,a)=>{t?s({code:500,msg:t.message}):e(a)})})}},function(e,t,s){var a=s(0),o=s(2);t.create=(e=>new Promise((t,s)=>{/[A-Z][a-zA-Z\'][^#&<>\"~;$^%{}?!*+_\-»«@£§€ªº,0-9]{1,20}$/.test(e.name)?o.encrypt([e.name]).then(o=>a.Patient.create({name:o[0],birthdate:e.birthdate,gender:e.gender}).then(e=>t(e),e=>s(e)),e=>s(e)):s({code:500,msg:"invalid name"})}))},function(e,t,s){var a=s(0),o=s(2);t.create=(e=>new Promise((t,s)=>{if(e.mac_addr){let n=o.generatePassword();o.encrypt([n]).then(o=>a.Board.create({mac_addr:e.mac_addr.toLowerCase(),boardmodel_id:e.model,password:o[0]}).then(e=>t({id:e.id,mac_addr:e.mac_addr,password:n}),e=>s({code:500,msg:e.message})),e=>s({code:500,msg:e.message}))}else s({code:500,msg:"MAC address is required"})})),t.findByMAC=(e=>new Promise((t,s)=>{a.Board.findOne({where:{mac_addr:e}}).then(e=>{e?t(e):s({code:500,msg:"board not found"})},e=>s({code:500,msg:e.message}))})),t.setLocation=((e,t)=>new Promise((s,a)=>{e.update({location:t,active:!0}).then(()=>s(),e=>a({code:500,msg:e.message}))})),t.authenticate=((e,t)=>new Promise((s,n)=>{o.encrypt([t]).then(t=>a.Board.findOne({where:{mac_addr:e,password:t[0]}}).then(e=>{e?e.active?n({code:500,msg:"board already in use"}):s(e):n({code:500,msg:"MAC address and password don't match"})},e=>n({code:500,msg:e.message})),e=>n({code:500,msg:e.message}))})),t.remove=(e=>new Promise((t,s)=>{a.Board.findById(e).then(e=>e.destroy().then(()=>t(),e=>s({code:500,msg:e.message})),e=>s({code:500,msg:e.message}))}))},function(e,t,s){var a=s(0);t.create=(e=>new Promise((t,s)=>{a.Boardmodel.create({type:e.type,name:e.name}).then(e=>t(e),e=>s({code:500,msg:e.message}))})),t.list=(()=>new Promise((e,t)=>{a.Boardmodel.findAll({attributes:["id","type","name"]}).then(t=>e(t),e=>t({code:500,msg:e.message}))})),t.update=((e,t)=>new Promise((s,o)=>{a.Boardmodel.findById(e).then(e=>{e?e.update({type:t.type,name:t.name}).then(()=>s(),e=>o(e)):o({code:500,msg:"board model not found"})},e=>o({code:500,msg:e.message}))})),t.remove=(e=>new Promise((t,s)=>{a.Boardmodel.findById(e).then(e=>{e?e.destroy().then(()=>t(),e=>s({code:500,msg:e.message})):s({code:500,msg:"board model not found"})},e=>s({code:500,msg:e.message}))})),t.setSensor=((e,t)=>new Promise((s,o)=>{a.Boardmodel.findById(e).then(e=>{e?e.hasSensor(t).then(a=>{a?o({code:500,msg:"sensor is already associated"}):e.addSensor(t).then(()=>s(),e=>o({code:500,msg:e.message}))},e=>o({code:500,msg:e.message})):o({code:500,msg:"board model not found"})},e=>o({code:500,msg:e.message}))})),t.getSensors=(e=>new Promise((t,s)=>{a.Boardmodel.findById(e).then(e=>{e?e.getSensors({attributes:{exclude:["created_at","updated_at"]}}).then(e=>{e.forEach(e=>delete e.dataValues.BoardSensor),t(e)},e=>s({code:500,msg:e.message})):s({code:500,msg:"board model not found"})},e=>s({code:500,msg:e.message}))})),t.removeSensor=((e,t)=>new Promise((s,o)=>{a.Boardmodel.findById(e).then(e=>{e?e.removeSensors(t).then(()=>s(),e=>o({code:500,msg:e.message})):o({code:500,msg:"board model not found"})},e=>o({code:500,msg:e.message}))}))},function(e,t,s){var a=s(1).v1_0_0;t.create=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.create(e.body).then(e=>t.status(200).json({id:e.id}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.list=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.list().then(e=>t.status(200).json({models:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.update=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.update(e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.delete=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.remove(e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.setSensor=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.setSensor(e.params.id,e.body.sensor_id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.getSensors=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.getSensors(e.params.id).then(e=>t.status(200).json({sensors:e}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")}),t.removeSensor=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?a.boardmodel.removeSensor(e.params.id,e.body.sensor_id).then(()=>t.status(200).json({result:!0}),e=>t.status(e.code).send(e.message)):t.status(401).send("Unauthorized")})},function(e,t,s){e.exports.v1_0_0={board_model:s(20),board:s(12),manage:s(11),record:s(10),sensor:s(9),user:s(8),vitabox:s(7)}},function(e,t,s){e.exports=(e=>{var t=s(21),a=s(6)();e.post("/register",a({"1.0.0":t.v1_0_0.user.register,"2.0.0":(e,t)=>t.json({error:"invalid version"})})).post("/login",a({"1.0.0":t.v1_0_0.user.login})).post("/chpass",a({"1.0.0":t.v1_0_0.user.changePassword})).post("/vitabox",a({"1.0.0":t.v1_0_0.vitabox.create})).get("/vitabox",a({"1.0.0":t.v1_0_0.vitabox.list})).get("/vitabox/:id",a({"1.0.0":t.v1_0_0.vitabox.find})).get("/settings/vitabox",a({"1.0.0":t.v1_0_0.vitabox.getSettings})).put("/settings/vitabox",a({"1.0.0":t.v1_0_0.vitabox.setSettings})).put("/vitabox/:id",a({"1.0.0":t.v1_0_0.vitabox.update})).delete("/vitabox/:id",a({"1.0.0":t.v1_0_0.vitabox.delete})).post("/vitabox/:id/register",a({"1.0.0":t.v1_0_0.vitabox.register})).post("/vitabox/:id/connect",a({"1.0.0":t.v1_0_0.vitabox.connect})).get("/vitabox/:id/user",a({"1.0.0":t.v1_0_0.vitabox.getUsers})).post("/vitabox/:id/user",a({"1.0.0":t.v1_0_0.vitabox.addUser})).delete("/vitabox/:id/user",a({"1.0.0":t.v1_0_0.vitabox.removeUser})).post("/vitabox/:id/patient",a({"1.0.0":t.v1_0_0.vitabox.addPatient})).get("/vitabox/:id/patient",a({"1.0.0":t.v1_0_0.vitabox.getPatients})).delete("/vitabox/:id/patient",a({"1.0.0":t.v1_0_0.vitabox.removePatient})).post("/vitabox/:id/board",a({"1.0.0":t.v1_0_0.vitabox.addBoard})).get("/vitabox/:id/board",a({"1.0.0":t.v1_0_0.vitabox.getBoards})).delete("/vitabox/:id/board",a({"1.0.0":t.v1_0_0.vitabox.removeBoard})).post("/boardmodel",a({"1.0.0":t.v1_0_0.board_model.create})).get("/boardmodel",a({"1.0.0":t.v1_0_0.board_model.list})).put("/boardmodel/:id",a({"1.0.0":t.v1_0_0.board_model.update})).delete("/boardmodel/:id",a({"1.0.0":t.v1_0_0.board_model.delete})).post("/boardmodel/:id/sensor",a({"1.0.0":t.v1_0_0.board_model.setSensor})).get("/boardmodel/:id/sensor",a({"1.0.0":t.v1_0_0.board_model.getSensors})).delete("/boardmodel/:id/sensor",a({"1.0.0":t.v1_0_0.board_model.removeSensor})).post("/board",a({"1.0.0":t.v1_0_0.board.create})).post("/sensor",a({"1.0.0":t.v1_0_0.sensor.create})).get("/sensor",a({"1.0.0":t.v1_0_0.sensor.list})).put("/sensor/:id",a({"1.0.0":t.v1_0_0.sensor.update})).delete("/sensor/:id",a({"1.0.0":t.v1_0_0.sensor.delete})).post("/record",a({"1.0.0":t.v1_0_0.record.create})).get("/record/patient/:id",a({"1.0.0":t.v1_0_0.record.listByPatient})).get("/record/board/:id",a({"1.0.0":t.v1_0_0.record.listByBoard})).get("/record/sensor/:id",a({"1.0.0":t.v1_0_0.record.listBySensor})).get("/destroy",a({"1.0.0":t.v1_0_0.manage.destroyAll})).get("/testdb",a({"1.0.0":t.v1_0_0.manage.testDb})),e.all("*",(e,t)=>{t.status(404).json({message:"Route could not be found"})})})},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("crypto")},function(e,t,s){var a=s(4),o=new a.Schema({value:{type:Number,required:!0},datetime:{type:Date,default:Date.now()},patient_id:{type:String,required:!1},board_id:{type:String,required:!0},sensor_id:{type:String,required:!0}},{versionKey:!1});e.exports=a.model("Record",o)},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Vitabox",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},password:{type:t.STRING,allowNull:!1},latitude:{type:t.DECIMAL(10,7),allowNull:!0,defaultValue:null,validate:{min:{args:-90,msg:"latitude minimum acceptable value is -90"},max:{args:90,msg:"latitude maximum acceptable value is 90"}}},longitude:{type:t.DECIMAL(10,7),allowNull:!0,defaultValue:null,validate:{min:{args:-180,msg:"longitude minimum acceptable value is -180"},max:{args:180,msg:"longitude maximum acceptable value is 180"}}},settings:{type:t.JSON,allowNull:!0,defaultValue:null},address:{type:t.STRING,defaultValue:null,validate:{notEmpty:{args:!0,msg:"address must be defined"}}},registered:{type:t.BOOLEAN,defaultValue:!1},active:{type:t.BOOLEAN,defaultValue:!1}},{underscored:!0});return s.associate=function(e){e.Vitabox.belongsToMany(e.User,{through:e.UserVitabox}),e.Vitabox.hasMany(e.Patient),e.Vitabox.hasMany(e.Board)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("User",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},email:{type:t.STRING,allowNull:!1,unique:{args:!0,msg:"email already registered"}},password:{type:t.STRING,allowNull:!1},admin:{type:t.BOOLEAN,defaultValue:!1}},{scopes:{profile:{attributes:{exclude:["password"]}}},underscored:!0});return s.associate=function(e){e.User.belongsToMany(e.Vitabox,{through:e.UserVitabox})},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{return e.define("UserVitabox",{sponsor:{type:t.BOOLEAN,defaultValue:!1}},{underscored:!0})})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Sensor",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},transducer:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"transducer name must be defined"}}},measure:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"transducer measure must be defined"}}},min_acceptable:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"minimum acceptable value must be defined"}}},max_acceptable:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"maximum acceptable value must be defined"}}},min_possible:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"minimum possible value must be defined"}}},max_possible:{type:t.DECIMAL(10,5),validate:{isDecimal:{args:!0,msg:"maximum possible value must be defined"}}}},{underscored:!0});return s.associate=function(e){e.Sensor.belongsToMany(e.Boardmodel,{through:"BoardSensor"})},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Patient",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},birthdate:{type:t.DATEONLY,allowNull:!1},name:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"patient name must be defined"}}},gender:{type:t.ENUM,values:["undefined","male","female"],defaultValue:"undefined",validate:{isIn:{args:["male","female","undefined"],msg:"gender must be 'male', 'female' or 'undefined'"}}}},{underscored:!0});return s.associate=function(e){e.Patient.belongsTo(e.Vitabox)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Board",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},password:{type:t.STRING,allowNull:!1},location:{type:t.STRING,allowNull:!0,defaultValue:null},mac_addr:{type:t.STRING,allowNull:!1,unique:{args:!0,msg:"MAC address already in use"},validate:{is:{args:/^([0-9a-f]{2}[:]){7}([0-9a-f]{2})$/,msg:"MAC addres must be valid"}}},active:{type:t.BOOLEAN,defaultValue:!1}},{underscored:!0});return s.associate=function(e){e.Board.belongsTo(e.Vitabox),e.Board.belongsTo(e.Boardmodel)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Boardmodel",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},type:{type:t.ENUM,values:["environmental","wearable","non-wearable"],validate:{isIn:{args:[["environmental","wearable","non-wearable"]],msg:"board type must be environmental, wearable or non-wearable"}}},name:{type:t.STRING,unique:{args:!0,msg:"board model already registered"},allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"board model must be defined"}}}},{underscored:!0});return s.associate=function(e){e.Boardmodel.hasMany(e.Board),e.Boardmodel.belongsToMany(e.Sensor,{through:"BoardSensor"})},s})},function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("cluster")},function(e,t,s){(function(e){var t=s(39);if(s(38).config(),t.isMaster){var a=s(0);a.sequelize.sync().then(()=>{s(3).seed(a).then(()=>{console.log("[32m%s[0m.","(PLAIN) Connection established with MongoDB and MySQL");var e=s(25).cpus().length;console.log("Master cluster setting up "+e+" workers...");for(var a=0;a<e;a++)t.fork();t.on("exit",function(e,s,a){console.log("Worker "+e.process.pid+" died with code: "+s+", and signal: "+a+"-> Starting a new worker"),t.fork()})},e=>{console.log("Unable to seed Databases."),console.log(e.message),process.exit(1)})},e=>{console.log("Unable to connect to Databases."),console.log(e),process.exit(1)})}else{var o=s(24),n=s(23),d=s(22),r=s(5),i=s(1).v1_0_0.utils,c=o();c.use(r.urlencoded({extended:!0})),c.use(r.json()),c.use((e,t,s)=>{if(t.header("Access-Control-Allow-Origin","*"),t.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept, Authorization, Accept-Version"),t.header("Access-Control-Allow-Methods","POST, GET, PUT, DELETE, OPTIONS"),t.header("Access-Control-Allow-Credentials",!0),"OPTIONS"===e.method)return t.send(200);e.headers&&e.headers.authorization?i.validateToken(e.headers.authorization,e.connection.remoteAddress).then(a=>{a?(e.client=a,s()):t.status(500).send("Client not registered")},e=>t.status(500).send(e.message)):(e.user=void 0,s())}),c.use("/",o.static(n.resolve(e,"public"))),c.use("/docs",o.static(n.resolve(e,"docs"))),d(c);var u=process.env.PORT||8080;c.listen(u,()=>{console.log("[32m%s %d[0m.","(PLAIN) Server http listening on port",u)})}}).call(this,"")}]);
//# sourceMappingURL=bundle.js.map