require("source-map-support").install(),function(e){var t={};function s(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.w={},s(s.s=40)}([function(e,t,s){var n=s(4),a=s(37),r="",o="";r="mongodb://localhost:27017/myproject",o="mysql://api:123qwe@localhost:3306/node";const i={$eq:a.Op.eq,$ne:a.Op.ne,$gte:a.Op.gte,$gt:a.Op.gt,$lte:a.Op.lte,$lt:a.Op.lt,$not:a.Op.not,$in:a.Op.in,$notIn:a.Op.notIn,$is:a.Op.is,$like:a.Op.like,$notLike:a.Op.notLike,$iLike:a.Op.iLike,$notILike:a.Op.notILike,$regexp:a.Op.regexp,$notRegexp:a.Op.notRegexp,$iRegexp:a.Op.iRegexp,$notIRegexp:a.Op.notIRegexp,$between:a.Op.between,$notBetween:a.Op.notBetween,$overlap:a.Op.overlap,$contains:a.Op.contains,$contained:a.Op.contained,$adjacent:a.Op.adjacent,$strictLeft:a.Op.strictLeft,$strictRight:a.Op.strictRight,$noExtendRight:a.Op.noExtendRight,$noExtendLeft:a.Op.noExtendLeft,$and:a.Op.and,$or:a.Op.or,$any:a.Op.any,$all:a.Op.all,$values:a.Op.values,$col:a.Op.col};n.connect(r);var d=new a(o,{operatorsAliases:i,logging:!1});const u={Boardmodel:s(36)(d,a),Board:s(35)(d,a),Patient:s(34)(d,a),Sensor:s(33)(d,a),UserVitabox:s(32)(d,a),User:s(31)(d,a),Vitabox:s(30)(d,a),Record:s(29)};Object.keys(u).forEach(e=>{u[e].associate&&u[e].associate(u)}),u.sequelize=d,u.mongoose=n.connection,e.exports=u},function(e,t,s){e.exports.v1_0_0={boardmodel:s(19),board:s(18),patient:s(17),record:s(16),sensor:s(15),user:s(14),utils:s(2),vitabox:s(13)}},function(e,t,s){(function(e){var n=s(28),a=s(27),r=s(26),o=s(0);t.encrypt=function(e){return new Promise((t,s)=>{e.forEach((t,s)=>{let a=n.createCipher(process.env.ALGORITHM,process.env.KEY);return e[s]=a.update(Buffer.from(t),"utf8","hex")+a.final("hex")}),t(e)})},t.decrypt=function(e){let t=n.createDecipher(process.env.ALGORITHM,process.env.KEY);return t.update(e,"hex","utf8")+t.final("utf8")},t.createToken=function(t,s){return new Promise((n,o)=>{let i=a.readFileSync(e+"/../../keys/key.pem").toString();void 0===i&&o(new Error("error on load private key"));let d={id:t.id,role:t.constructor.name},u={expiresIn:"8h",algorithm:"RS256",subject:s};r.sign(d,i,u,function(e,t){e&&o(e),n(t)})})},t.validateToken=function(t,s){return new Promise((n,i)=>{let d=a.readFileSync(e+"/../../keys/cert.pem").toString();void 0===d&&i("error on load public key");let u={algorithms:["RS256"],subject:s};r.verify(t,d,u,function(e,t){e&&i(e),o[t.role].findById(t.id).then(e=>n(e),e=>i(e))})})},t.generatePassword=(()=>{let e,t="";for(e=0;e<10;e++)t+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"[Math.floor(61*Math.random())];return t}),t.deleteAll=function(){return new Promise((e,t)=>{var s={raw:!0};o.sequelize.query("SET FOREIGN_KEY_CHECKS = 0",s).then(()=>{o.UserVitabox.truncate().then(()=>{o.User.truncate().then(()=>{o.Vitabox.truncate().then(()=>{o.Boardmodel.truncate().then(()=>{o.Board.truncate().then(()=>{o.Patient.truncate().then(()=>{o.Record.remove({},()=>{o.sequelize.query("SET FOREIGN_KEY_CHECKS = 1",s).then(()=>e(),e=>t(e))})},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))},e=>t(e))})},t.testSeed=function(){return new Promise((e,t)=>{s(3).testSeed(o).then(()=>e(),e=>t(e))})}}).call(this,"app/business/v1.0.0")},function(e,t,s){var n=s(2);e.exports.seed=(e=>new Promise((t,s)=>{e.User.count({where:{admin:!0}}).then(a=>{a<1?n.encrypt(["admin@a.aa","user1@a.aa","user2@a.aa","123qweASD","passvita","José António","Manuela Antonieta"]).then(n=>{e.User.bulkCreate([{email:n[0],admin:!0,password:n[3]},{email:n[1],password:n[3]},{email:n[2],password:n[3]}]).then(a=>e.Vitabox.create({latitude:"39.6003075",longitude:"-8.3906627",address:"Av. Dr. Aurélio Ribeiro 3, Tomar, Portugal",registered:!0,active:!0,password:n[4]}).then(r=>r.addUsers([a[1].id,a[2].id]).then(()=>e.Boardmodel.bulkCreate([{name:"Zolertia RE-Mote",type:"environmental"},{name:"Xiaomi MI Band",type:"wearable"},{name:"MySignals",type:"non-wearable"}]).then(a=>e.Board.bulkCreate([{vitabox_id:r.id,boardmodel_id:a[0].id,location:"kitchen"},{vitabox_id:r.id,boardmodel_id:a[1].id},{vitabox_id:r.id,boardmodel_id:a[2].id,location:"bedroom"}]).then(o=>e.Sensor.bulkCreate([{transducer:"dht22",measure:"temperature",min_acceptable:"10",max_acceptable:"25",min_possible:"-20",max_possible:"50"},{transducer:"dht22",measure:"humidity",min_acceptable:"30",max_acceptable:"50",min_possible:"20",max_possible:"60"},{transducer:"mq-7",measure:"carbon_monoxide",min_acceptable:"2",max_acceptable:"10",min_possible:"10",max_possible:"500"}]).then(i=>a[0].addSensors([i[0].id,i[1].id]).then(()=>e.Record.insertMany([{value:"20",datetime:"2018-03-08T09:43:40.000Z",board_id:o[0].id,sensor_id:i[0].id},{value:"22",datetime:"2018-03-08T09:47:28.000Z",board_id:o[0].id,sensor_id:i[0].id},{value:"19",datetime:"2018-03-08T09:53:47.000Z",board_id:o[0].id,sensor_id:i[0].id}],(a,o)=>{a?s(a):e.Patient.bulkCreate([{name:n[5],birthdate:"1987-02-28",gender:"male"},{name:n[6],birthdate:"1972-02-28",gender:"female"}]).then(e=>r.addPatients(e).then(()=>t(),e=>s(e)),e=>s(e))}),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e)),e=>s(e))},e=>s(e)):t()},e=>s(e))})),e.exports.testSeed=(e=>new Promise((t,s)=>{n.encrypt(["admin@a.aa","123qweASD"]).then(n=>{e.User.create({email:n[0],admin:!0,password:n[1]}).then(()=>t(),e=>s(e))},e=>s(e))}))},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("express-routes-versioning")},function(e,t,s){var n=s(1).v1_0_0;t.create=function(e,t){"User"===e.client.constructor.name&&e.client.admin?n.vitabox.create().then(e=>t.status(200).json(e),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.register=function(e,t){"User"===e.client.constructor.name&&e.client.admin?n.user.findByEmail(e.body.email).then(s=>{n.vitabox.register(e.params.id,e.body).then(a=>{n.vitabox.addUser(e.client,a.id,s.id,!0).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message))},e=>t.status(500).send(e.message))},e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.connect=function(e,t){n.vitabox.connect(e.params.id,e.body.password).then(s=>{n.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e}),e=>t.status(500).send({error:e.message}))},e=>t.status(500).send(e.message))},t.list=function(e,t){"User"===e.client.constructor.name?n.vitabox.list(e.client).then(e=>t.status(200).json({vitaboxes:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.find=function(e,t){"User"===e.client.constructor.name?n.vitabox.find(e.client,e.params.id).then(e=>t.status(200).json({vitabox:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.getSettings=function(e,t){"Vitabox"===e.client.constructor.name?t.status(200).json({settings:e.client.settings}):t.status(500).send("Unauthorized")},t.setSettings=function(e,t){"Vitabox"===e.client.constructor.name?e.client.update({settings:e.body.settings}).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.update=function(e,t){"User"===e.client.constructor.name?n.vitabox.update(e.client,e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.delete=function(e,t){"User"===e.client.constructor.name?n.vitabox.delete(e.client,e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.addUser=function(e,t){if("User"===e.client.constructor.name){let s=!!e.body.sponsor;n.user.findByEmail(e.body.email).then(a=>n.vitabox.addUser(e.client,e.params.id,a.id,s).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)),e=>t.status(500).send(e.message))}else t.status(500).send("Unauthorized")},t.getUsers=function(e,t){n.vitabox.getUsers("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({users:e}),e=>t.status(500).send(e.message))},t.removeUser=function(e,t){"User"===e.client.constructor.name?n.vitabox.removeUser(e.client,e.params.id,e.body.user_id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.addPatient=function(e,t){"User"===e.client.constructor.name?n.patient.create(e.body).then(s=>n.vitabox.addPatient(e.client,e.params.id,s.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.getPatients=function(e,t){n.vitabox.getPatients("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({patients:e}),e=>t.status(500).send(e.message))},t.removePatient=function(e,t){"User"===e.client.constructor.name?n.vitabox.removePatient(e.client,e.params.id,e.body.patient_id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.addBoard=function(e,t){"User"===e.client.constructor.name?n.board.create(e.body).then(s=>n.vitabox.addBoard(e.client,e.params.id,s.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.getBoards=function(e,t){n.vitabox.getBoards("User"===e.client.constructor.name,e.client,e.params.id).then(e=>t.status(200).json({boards:e}),e=>t.status(500).send(e.message))},t.removeBoard=function(e,t){"User"===e.client.constructor.name?n.vitabox.removeBoard(e.client,e.params.id,e.body.board_id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}},function(e,t,s){var n=s(1).v1_0_0;t.register=function(e,t){n.user.register(e.body.email,e.body.password).then(s=>{n.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e,user:s.id}),e=>t.status(500).send(e.message))},e=>t.status(500).send(e.message))},t.login=function(e,t){n.user.login(e.body.email,e.body.password).then(s=>{n.utils.createToken(s,e.connection.remoteAddress).then(e=>t.status(200).json({token:e,user:s.id}),e=>t.status(500).send(e.message))},e=>t.status(500).send(e.message))},t.changePassword=function(e,t){"User"===e.client.constructor.name?n.user.changePassword(e.client.id,e.body.old_password,e.body.new_password).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}},function(e,t,s){var n=s(1).v1_0_0;t.create=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.sensor.create(e.body).then(e=>t.status(200).json({id:e.id}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.list=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.sensor.list().then(e=>t.status(200).json({sensors:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.update=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.sensor.update(e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.delete=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.sensor.remove(e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")})},function(e,t,s){var n=s(1).v1_0_0;t.create=function(e,t){"Vitabox"===e.client.constructor.name?n.record.create(e.body.records).then(e=>{e?t.status(200).json({result:!0,error:"some records were discarded by invalid parameters, value, datetime, sensor_id and board_id are required"}):t.status(200).json({result:!0,error:""})},e=>t.status(500).json({result:!1,error:e.message})):t.status(500).json({error:"Unauthorized"})},t.listByPatient=function(e,t){"User"===e.client.constructor.name?n.record.listByPatient(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.listByBoard=function(e,t){"User"===e.client.constructor.name?n.record.listByBoard(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")},t.listBySensor=function(e,t){"User"===e.client.constructor.name&&e.client.admin?n.record.listBySensor(e.client,e.params.id).then(e=>t.status(200).json({records:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}},function(e,t,s){var n=s(1).v1_0_0;t.destroyAll=function(e,t){n.utils.deleteAll().then(()=>t.status(200).json({success:!0}),e=>t.status(500).send(e.message))},t.testDb=function(e,t){n.utils.deleteAll().then(()=>n.utils.testSeed().then(t.status(200).json({success:!0}),e=>t.status(500).send(e.message)),e=>t.status(500).send(e.message))}},function(e,t,s){s(1).v1_0_0},function(e,t,s){var n=s(0),a=s(2);t.create=function(){return new Promise((e,t)=>{let s=a.generatePassword();a.encrypt([s]).then(a=>{n.Vitabox.create({password:a[0]}).then(t=>e({id:t.id,password:s}),e=>t(e))},e=>t(e))})},t.register=function(e,t){return new Promise((s,a)=>{t.address?n.Vitabox.findOne({where:{id:e,registered:!1}}).then(e=>{e?e.update({registered:!0,address:t.address,longitude:t.longitude,latitude:t.latitude}).then(()=>s(e),e=>a(e)):a(new Error("Vitabox already registered or doesn´t exist"))},e=>a(e)):a(new Error("Vitabox address must be defined"))})},t.connect=function(e,t){return new Promise((s,r)=>{a.encrypt([t]).then(t=>{n.Vitabox.findOne({where:{password:t[0],id:e,registered:!0}}).then(e=>{e?e.update({active:!0}).then(()=>s(e),e=>r(e)):r(new Error("vitabox not found, verify if was already created and registered"))},e=>r(e))},e=>r(e))})},t.list=function(e){return new Promise((t,s)=>{e.admin?n.Vitabox.findAll({attributes:{exclude:["password"]}}).then(e=>t(e),e=>s(e)):e.getVitaboxes({attributes:["id","latitude","longitude","address"],where:{active:!0}}).then(e=>{e.forEach(e=>{e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),t(e)},e=>s(e))})},t.find=function(e,t){return new Promise((s,a)=>{e.admin?n.Vitabox.findById(t,{attributes:{exclude:["password"]}}).then(e=>{e?s(e):a(new Error("Vitabox not found"))},e=>a(e)):e.getVitaboxes({attributes:["id","latitude","longitude","address"],where:{id:t,active:!0}}).then(e=>{e.length>0?(e[0].dataValues.sponsor=e[0].dataValues.UserVitabox.dataValues.sponsor,delete e[0].dataValues.UserVitabox,s(e[0])):a(new Error("Vitabox not found"))},e=>a(e))})},t.update=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.update({latitude:s.latitude,longitude:s.longitude,address:s.address,settings:s.settings}).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.update({latitude:s.latitude,longitude:s.longitude,address:s.address}).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},t.delete=function(e,t){return new Promise((s,a)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.destroy().then(()=>s(),e=>a(e.message)):_isSponsor(t,e).then(()=>{t.destroy().then(()=>s(),e=>a(e.message))},e=>a(e)):a(new Error("Vitabox not found"))},e=>a(e))})},t.addUser=function(e,t,s,a){return new Promise((r,o)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.addUser(s,{through:{sponsor:a}}).then(()=>r(),e=>o(e)):_isSponsor(t,e).then(()=>{t.addUser(s,{through:{sponsor:a}}).then(()=>r(),e=>o(e))},e=>o(e)):o(new Error("Vitabox not found"))},e=>o(e))})},t.getUsers=function(e,t,s){return new Promise((r,o)=>{e?n.Vitabox.findById(s).then(e=>{e?t.admin?e.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=a.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),r(e)},e=>o(e)):_isUser(e,t).then(()=>{e.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=a.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),r(e)},e=>o(e))},e=>o(e)):o(new Error("Vitabox not found"))},e=>o(e)):t.getUsers({attributes:["id","email"]}).then(e=>{e.forEach(e=>{e.email=a.decrypt(e.email),e.dataValues.since=e.dataValues.UserVitabox.dataValues.created_at,e.dataValues.sponsor=e.dataValues.UserVitabox.dataValues.sponsor,delete e.dataValues.UserVitabox}),r(e)},e=>o(e))})},t.removeUser=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.removeUser(s).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.removeUser(s).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},t.addPatient=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.addPatient(s).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.addPatient(s).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},t.getPatients=function(e,t,s){return new Promise((r,o)=>{e?t.admin?n.Patient.findAll({where:{vitabox_id:s},attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>e.name=a.decrypt(e.name)),r(e)},e=>o(e)):n.Vitabox.findById(s).then(e=>{e?_isUser(e,t).then(()=>{n.Patient.findAll({where:{vitabox_id:s},attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>e.name=a.decrypt(e.name)),r(e)},e=>o(e))},e=>o(e)):o(new Error("Vitabox not found"))},e=>o(e)):t.getPatients({attributes:["id","birthdate","name","gender",["created_at","since"]]}).then(e=>{e.forEach(e=>{e.name=a.decrypt(e.name),delete e.dataValues.VitaboxId}),r(e)},e=>o(e))})},t.removePatient=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.removePatient(s).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.removePatient(s).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},t.addBoard=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.addBoard(s).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.addBoard(s).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},t.getBoards=function(e,t,s){return new Promise((a,r)=>{e?t.admin?n.Board.findAll({where:{vitabox_id:s},attributes:["id","location","mac_address","created_at"],include:[{model:n.Boardmodel,attributes:["id","type","name"],include:[{model:n.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)),a(e)},e=>r(e)):n.Vitabox.findById(s).then(e=>{e?_isUser(e,t).then(()=>{n.Board.findAll({where:{vitabox_id:s},attributes:["id","location","mac_address","created_at"],include:[{model:n.Boardmodel,attributes:["id","type","name"],include:[{model:n.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)),a(e)},e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e)):t.getBoards({attributes:["id","location","mac_address","created_at"],include:[{model:n.Boardmodel,attributes:["id","type","name"],include:[{model:n.Sensor,attributes:{exclude:["created_at","updated_at"]}}]}]}).then(e=>{e.forEach(e=>e.Boardmodel.Sensors.forEach(e=>delete e.dataValues.BoardSensor)),a(e)},e=>r(e))})},t.removeBoard=function(e,t,s){return new Promise((a,r)=>{n.Vitabox.findById(t).then(t=>{t?e.admin?t.removeBoard(s).then(()=>a(),e=>r(e)):_isSponsor(t,e).then(()=>{t.removeBoard(s).then(()=>a(),e=>r(e))},e=>r(e)):r(new Error("Vitabox not found"))},e=>r(e))})},_isSponsor=((e,t)=>new Promise((s,n)=>{e.getUsers({where:{id:t.id}}).then(e=>{e.length>0&&e[0].UserVitabox.sponsor?s():n(new Error("Unauthorized"))},e=>n(e))})),_isUser=((e,t)=>new Promise((s,n)=>{e.hasUser(t).then(e=>{e?s():n(new Error("Unauthorized"))},e=>n(e))}))},function(e,t,s){var n=s(0),a=s(2);t.register=function(e,t){return new Promise((s,r)=>{/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d$@$!%*#?&-.]{8,}$/.test(t)?/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/.test(e)?a.encrypt([e,t]).then(e=>{n.User.create({email:e[0],password:e[1]}).then(e=>s(e),e=>r(e))},e=>r(e)):r(new Error("invalid email")):r(new Error("invalid password, must have at least one uppercase letter, one lowercase, one digit and a minimum 8 characters"))})},t.login=function(e,t){return new Promise((s,r)=>{a.encrypt([e,t]).then(e=>{n.User.findOne({where:{email:e[0],password:e[1]}}).then(e=>{e?s(e):r(new Error("email and password don't match"))},e=>r(e))},e=>r(e))})},t.changePassword=function(e,t,s){return new Promise((r,o)=>{/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d$@$!%*#?&-.]{8,}$/.test(s)?a.encrypt([t,s]).then(t=>{n.User.findOne({where:{id:e,password:t[0]}}).then(e=>{e?e.update({password:t[1]}).then(()=>r(),e=>o(e)):o(new Error("old password don't match"))},e=>o(e))},e=>o(e)):o(new Error("invalid password, must have at least one uppercase letter, one lowercase, one digit and a minimum 8 characters"))})},t.findByEmail=function(e,t){return new Promise((t,s)=>{a.encrypt([e]).then(e=>{n.User.findOne({where:{email:e[0]}}).then(e=>{e?t(e):s(new Error("user not registered"))},e=>s(e))},e=>s(e))})}},function(e,t,s){var n=s(0);t.create=(e=>new Promise((t,s)=>{n.Sensor.create({transducer:e.transducer,measure:e.measure,min_acceptable:e.min_acceptable,max_acceptable:e.max_acceptable,min_possible:e.min_possible,max_possible:e.max_possible}).then(e=>t(e),e=>s(e))})),t.list=(e=>new Promise((e,t)=>{n.Sensor.findAll({attributes:{exclude:["created_at","updated_at"]}}).then(t=>e(t),e=>t(e))})),t.update=((e,t)=>new Promise((s,a)=>{n.Sensor.findById(e).then(e=>{e?e.update({transducer:t.transducer,measure:t.measure,min_acceptable:t.min_acceptable,max_acceptable:t.max_acceptable,min_possible:t.min_possible,max_possible:t.max_possible}).then(()=>s(),e=>a(e)):a(new Error("sensor not found"))},e=>a(e))})),t.remove=(e=>new Promise((t,s)=>{n.Sensor.findById(e).then(e=>{e?e.destroy().then(()=>t(),e=>s(e)):s(new Error("sensor not found"))},e=>s(e))}))},function(e,t,s){var n=s(0);t.create=function(e){return new Promise((t,s)=>{var a=[],r=!1;e.forEach(e=>{e.board_id&&""!==e.board_id&&e.sensor_id&&""!==e.sensor_id&&e.value&&e.datetime?a.push({value:e.value,datetime:e.datetime,patient_id:e.patient_id&&""!==e.patient_id?e.patient_id:null,board_id:e.board_id,sensor_id:e.sensor_id}):r=!0}),n.Record.insertMany(a,(e,n)=>{e?s(e):t(r)})})},t.listByPatient=function(e,t){return new Promise((s,a)=>{e.admin?n.Record.find().where("patient_id").equals(t).select("-_id").exec((e,t)=>{e?a(e):s(t)}):n.Patient.findById(t,{include:[{model:n.Vitabox}]}).then(r=>r.Vitabox.hasUser(e).then(e=>{e?n.Record.find().where("patient_id").equals(t).select("-_id").exec((e,t)=>{e?a(e):s(t)}):a("Unauthorized")},e=>a(e)),e=>a(e))})},t.listByBoard=function(e,t){return new Promise((s,a)=>{e.admin?n.Record.find().where("board_id").equals(t).select("-_id").exec((e,t)=>{e?a(e):s(t)}):n.Board.findById(t,{include:[{model:n.Vitabox}]}).then(r=>r.Vitabox.hasUser(e).then(e=>{e?n.Record.find().where("board_id").equals(t).select("-_id").exec((e,t)=>{e?a(e):s(t)}):a("Unauthorized")},e=>a(e)),e=>a(e))})},t.listBySensor=function(e,t){return new Promise((e,s)=>{n.Record.find().where("sensor_id").equals(t).select("-_id").exec((t,n)=>{t?s(t):e(n)})})}},function(e,t,s){var n=s(0),a=s(2);t.create=(e=>new Promise((t,s)=>{/[A-Z][a-zA-Z\'][^#&<>\"~;$^%{}?!*+_\-»«@£§€ªº,0-9]{1,20}$/.test(e.name)?a.encrypt([e.name]).then(a=>n.Patient.create({name:a[0],birthdate:e.birthdate,gender:e.gender}).then(e=>t(e),e=>s(e)),e=>s(e)):s(new Error("invalid name"))}))},function(e,t,s){var n=s(0);t.create=(e=>new Promise((t,s)=>{n.Board.create({location:e.location,mac_address:e.mac_address,boardmodel_id:e.model}).then(e=>t(e),e=>s(e))})),t.find=(e=>new Promise((t,s)=>{n.Board.findById(e).then(e=>{e.getBoardmodel().then(e=>t(e),e=>s(e))},e=>s(e))})),t.remove=(e=>new Promise((t,s)=>{n.Board.findById(e).then(e=>e.destroy().then(()=>t(),e=>s(e)),e=>s(e))}))},function(e,t,s){var n=s(0);t.create=(e=>new Promise((t,s)=>{n.Boardmodel.create({type:e.type,name:e.name}).then(e=>t(e),e=>s(e))})),t.list=(()=>new Promise((e,t)=>{n.Boardmodel.findAll({attributes:["id","type","name"]}).then(t=>e(t),e=>t(e))})),t.update=((e,t)=>new Promise((s,a)=>{n.Boardmodel.findById(e).then(e=>{e?e.update({type:t.type,name:t.name}).then(()=>s(),e=>a(e)):a(new Error("board model not found"))},e=>a(e))})),t.remove=(e=>new Promise((t,s)=>{n.Boardmodel.findById(e).then(e=>{e?e.destroy().then(()=>t(),e=>s(e)):s(new Error("board model not found"))},e=>s(e))})),t.setSensor=((e,t)=>new Promise((s,a)=>{n.Boardmodel.findById(e).then(e=>{e?e.hasSensor(t).then(n=>{n?a(new Error("sensor is already associated")):e.addSensor(t).then(()=>s(),e=>a(e))},e=>a(e)):a(new Error("board model not found"))},e=>a(e))})),t.getSensors=(e=>new Promise((t,s)=>{n.Boardmodel.findById(e).then(e=>{e?e.getSensors({attributes:{exclude:["created_at","updated_at"]}}).then(e=>{e.forEach(e=>delete e.dataValues.BoardSensor),t(e)},e=>s(e)):s(new Error("board model not found"))},e=>s(e))})),t.removeSensor=((e,t)=>new Promise((s,a)=>{n.Boardmodel.findById(e).then(e=>{e?e.removeSensors(t).then(()=>s(),e=>a(e)):a(new Error("board model not found"))},e=>a(e))}))},function(e,t,s){var n=s(1).v1_0_0;t.create=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.create(e.body).then(e=>t.status(200).json({id:e.id}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.list=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.list().then(e=>t.status(200).json({models:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.update=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.update(e.params.id,e.body).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.delete=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.remove(e.params.id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.setSensor=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.setSensor(e.params.id,e.body.sensor_id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.getSensors=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.getSensors(e.params.id).then(e=>t.status(200).json({sensors:e}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")}),t.removeSensor=((e,t)=>{"User"===e.client.constructor.name&&e.client.admin?n.boardmodel.removeSensor(e.params.id,e.body.sensor_id).then(()=>t.status(200).json({result:!0}),e=>t.status(500).send(e.message)):t.status(500).send("Unauthorized")})},function(e,t,s){e.exports.v1_0_0={board_model:s(20),board:s(12),manage:s(11),record:s(10),sensor:s(9),user:s(8),vitabox:s(7)}},function(e,t,s){e.exports=(e=>{var t=s(21),n=s(6)();e.post("/register",n({"1.0.0":t.v1_0_0.user.register,"2.0.0":(e,t)=>t.json({error:"invalid version"})})).post("/login",n({"1.0.0":t.v1_0_0.user.login})).post("/chpass",n({"1.0.0":t.v1_0_0.user.changePassword})).post("/vitabox",n({"1.0.0":t.v1_0_0.vitabox.create})).get("/vitabox",n({"1.0.0":t.v1_0_0.vitabox.list})).get("/vitabox/:id",n({"1.0.0":t.v1_0_0.vitabox.find})).get("/settings/vitabox",n({"1.0.0":t.v1_0_0.vitabox.getSettings})).put("/settings/vitabox",n({"1.0.0":t.v1_0_0.vitabox.setSettings})).put("/vitabox/:id",n({"1.0.0":t.v1_0_0.vitabox.update})).delete("/vitabox/:id",n({"1.0.0":t.v1_0_0.vitabox.delete})).post("/vitabox/:id/register",n({"1.0.0":t.v1_0_0.vitabox.register})).post("/vitabox/:id/connect",n({"1.0.0":t.v1_0_0.vitabox.connect})).get("/vitabox/:id/user",n({"1.0.0":t.v1_0_0.vitabox.getUsers})).post("/vitabox/:id/user",n({"1.0.0":t.v1_0_0.vitabox.addUser})).delete("/vitabox/:id/user",n({"1.0.0":t.v1_0_0.vitabox.removeUser})).post("/vitabox/:id/patient",n({"1.0.0":t.v1_0_0.vitabox.addPatient})).get("/vitabox/:id/patient",n({"1.0.0":t.v1_0_0.vitabox.getPatients})).delete("/vitabox/:id/patient",n({"1.0.0":t.v1_0_0.vitabox.removePatient})).post("/vitabox/:id/board",n({"1.0.0":t.v1_0_0.vitabox.addBoard})).get("/vitabox/:id/board",n({"1.0.0":t.v1_0_0.vitabox.getBoards})).delete("/vitabox/:id/board",n({"1.0.0":t.v1_0_0.vitabox.removeBoard})).post("/boardmodel",n({"1.0.0":t.v1_0_0.board_model.create})).get("/boardmodel",n({"1.0.0":t.v1_0_0.board_model.list})).put("/boardmodel/:id",n({"1.0.0":t.v1_0_0.board_model.update})).delete("/boardmodel/:id",n({"1.0.0":t.v1_0_0.board_model.delete})).post("/boardmodel/:id/sensor",n({"1.0.0":t.v1_0_0.board_model.setSensor})).get("/boardmodel/:id/sensor",n({"1.0.0":t.v1_0_0.board_model.getSensors})).delete("/boardmodel/:id/sensor",n({"1.0.0":t.v1_0_0.board_model.removeSensor})).post("/sensor",n({"1.0.0":t.v1_0_0.sensor.create})).get("/sensor",n({"1.0.0":t.v1_0_0.sensor.list})).put("/sensor/:id",n({"1.0.0":t.v1_0_0.sensor.update})).delete("/sensor/:id",n({"1.0.0":t.v1_0_0.sensor.delete})).post("/record",n({"1.0.0":t.v1_0_0.record.create})).get("/record/patient/:id",n({"1.0.0":t.v1_0_0.record.listByPatient})).get("/record/board/:id",n({"1.0.0":t.v1_0_0.record.listByBoard})).get("/record/sensor/:id",n({"1.0.0":t.v1_0_0.record.listBySensor})).get("/destroy",n({"1.0.0":t.v1_0_0.manage.destroyAll})).get("/testdb",n({"1.0.0":t.v1_0_0.manage.testDb})),e.all("*",(e,t)=>{t.status(404).json({message:"Route could not be found"})})})},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("crypto")},function(e,t,s){var n=s(4),a=new n.Schema({value:{type:Number,required:!0},datetime:{type:Date,default:Date.now()},patient_id:{type:String,required:!1},board_id:{type:String,required:!0},sensor_id:{type:String,required:!0}},{versionKey:!1});e.exports=n.model("Record",a)},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Vitabox",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},password:{type:t.STRING,allowNull:!1},latitude:{type:t.DECIMAL(10,7),allowNull:!0,defaultValue:null,validate:{min:{args:-90,msg:"latitude minimum acceptable value is -90"},max:{args:90,msg:"latitude maximum acceptable value is 90"}}},longitude:{type:t.DECIMAL(10,7),allowNull:!0,defaultValue:null,validate:{min:{args:-180,msg:"longitude minimum acceptable value is -180"},max:{args:180,msg:"longitude maximum acceptable value is 180"}}},settings:{type:t.JSON,allowNull:!0,defaultValue:null},address:{type:t.STRING,defaultValue:null,validate:{notEmpty:{args:!0,msg:"address must be defined"}}},registered:{type:t.BOOLEAN,defaultValue:!1},active:{type:t.BOOLEAN,defaultValue:!1}},{underscored:!0});return s.associate=function(e){e.Vitabox.belongsToMany(e.User,{through:e.UserVitabox}),e.Vitabox.hasMany(e.Patient),e.Vitabox.hasMany(e.Board)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("User",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},email:{type:t.STRING,allowNull:!1,unique:{args:!0,msg:"email already registered"}},password:{type:t.STRING,allowNull:!1},admin:{type:t.BOOLEAN,defaultValue:!1}},{scopes:{profile:{attributes:{exclude:["password"]}}},underscored:!0});return s.associate=function(e){e.User.belongsToMany(e.Vitabox,{through:e.UserVitabox})},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{return e.define("UserVitabox",{sponsor:{type:t.BOOLEAN,defaultValue:!1}},{underscored:!0})})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Sensor",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},transducer:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"transducer name must be defined"}}},measure:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"transducer measure must be defined"}}},min_acceptable:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"minimum acceptable value must be defined"}}},max_acceptable:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"maximum acceptable value must be defined"}}},min_possible:{type:t.DECIMAL(10,5),allowNull:!1,validate:{isDecimal:{args:!0,msg:"minimum possible value must be defined"}}},max_possible:{type:t.DECIMAL(10,5),validate:{isDecimal:{args:!0,msg:"maximum possible value must be defined"}}}},{underscored:!0});return s.associate=function(e){e.Sensor.belongsToMany(e.Boardmodel,{through:"BoardSensor"})},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Patient",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},birthdate:{type:t.DATEONLY,allowNull:!1},name:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"patient name must be defined"}}},gender:{type:t.ENUM,values:["undefined","male","female"],defaultValue:"undefined",validate:{isIn:{args:["male","female","undefined"],msg:"gender must be 'male', 'female' or 'undefined'"}}}},{underscored:!0});return s.associate=function(e){e.Patient.belongsTo(e.Vitabox)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Board",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},location:{type:t.STRING,allowNull:!0,defaultValue:null},mac_address:{type:t.STRING,allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"MAC address must be defined"}}}},{underscored:!0});return s.associate=function(e){e.Board.belongsTo(e.Vitabox),e.Board.belongsTo(e.Boardmodel)},s})},function(e,t,s){"use strict";e.exports=((e,t)=>{var s=e.define("Boardmodel",{id:{type:t.UUID,defaultValue:t.UUIDV4,primaryKey:!0},type:{type:t.ENUM,values:["environmental","wearable","non-wearable"],validate:{isIn:{args:[["environmental","wearable","non-wearable"]],msg:"board type must be environmental, wearable or non-wearable"}}},name:{type:t.STRING,unique:{args:!0,msg:"board model already registered"},allowNull:!1,defaultValue:"",validate:{notEmpty:{msg:"board model must be defined"}}}},{underscored:!0});return s.associate=function(e){e.Boardmodel.hasMany(e.Board),e.Boardmodel.belongsToMany(e.Sensor,{through:"BoardSensor"})},s})},function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("cluster")},function(e,t,s){(function(e){var t=s(39);if(s(38).config(),t.isMaster){var n=s(0);n.sequelize.sync().then(()=>{s(3).seed(n).then(()=>{console.log("[32m%s[0m.","(PLAIN) Connection established with MongoDB and MySQL");var e=s(25).cpus().length;console.log("Master cluster setting up "+e+" workers...");for(var n=0;n<e;n++)t.fork();t.on("exit",function(e,s,n){console.log("Worker "+e.process.pid+" died with code: "+s+", and signal: "+n+"-> Starting a new worker"),t.fork()})},e=>{console.log("Unable to seed Databases."),console.log(e.message),process.exit(1)})},e=>{console.log("Unable to connect to Databases."),console.log(e),process.exit(1)})}else{var a=s(24),r=s(23),o=s(22),i=s(5),d=s(1).v1_0_0.utils,u=a();u.use(i.urlencoded({extended:!0})),u.use(i.json()),u.use((e,t,s)=>{if(t.header("Access-Control-Allow-Origin","*"),t.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept, Authorization, Accept-Version"),t.header("Access-Control-Allow-Methods","POST, GET, PUT, DELETE, OPTIONS"),t.header("Access-Control-Allow-Credentials",!0),"OPTIONS"===e.method)return t.send(200);e.headers&&e.headers.authorization?d.validateToken(e.headers.authorization,e.connection.remoteAddress).then(n=>{n?(e.client=n,s()):t.status(500).send("Client not registered")},e=>t.status(500).send(e.message)):(e.user=void 0,s())}),u.use("/",a.static(r.resolve(e,"public"))),u.use("/docs",a.static(r.resolve(e,"docs"))),o(u);var l=process.env.PORT||8080;u.listen(l,()=>{console.log("[32m%s %d[0m.","(PLAIN) Server http listening on port",l)})}}).call(this,"")}]);
//# sourceMappingURL=bundle.js.map